# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import validator_pb2 as validator__pb2


class ValidatorStub(object):
  """The validator service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ValidatePIN = channel.unary_unary(
        '/validator.Validator/ValidatePIN',
        request_serializer=validator__pb2.PINRequest.SerializeToString,
        response_deserializer=validator__pb2.PINResponse.FromString,
        )


class ValidatorServicer(object):
  """The validator service definition.
  """

  def ValidatePIN(self, request, context):
    """validate personal identification number
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ValidatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ValidatePIN': grpc.unary_unary_rpc_method_handler(
          servicer.ValidatePIN,
          request_deserializer=validator__pb2.PINRequest.FromString,
          response_serializer=validator__pb2.PINResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'validator.Validator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
